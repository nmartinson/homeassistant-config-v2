button_card_templates:
  animated_btn_states_on:
    state:
      - spin: true
        styles:
          card:
            - background-color: '#DFDFDF'
          custom_fields:
            s2:
              - color: Grey
          label:
            - color: Grey
            - font-size: 11pt
          name:
            - color: '#171717'
          state:
            - color: Grey
        value: 'on'
  button_card_templates: null
  climate_btn:
    show_label: true
    show_state: true
    tap_action:
      action: more-info
  climate_btn_states:
    state:
      - styles:
          card:
            - background-color: red
          custom_fields:
            s2:
              - color: white
          icon:
            - color: white
          label:
            - color: white
          name:
            - color: white
          state:
            - color: white
        value: unavailable
      - icon: 'mdi:power'
        styles:
          card:
            - background-color: grey
          custom_fields:
            s2:
              - color: white
          icon:
            - color: white
          label:
            - color: white
          name:
            - color: white
          state:
            - color: white
        value: 'off'
      - icon: 'mdi:fire'
        styles:
          custom_fields:
            s2:
              - color: white
          icon:
            - color: white
          label:
            - color: white
          name:
            - color: white
          state:
            - color: white
        value: heat
      - styles:
          custom_fields:
            s2:
              - color: white
          icon:
            - color: white
          label:
            - color: white
          name:
            - color: white
          state:
            - color: white
        value: auto
  light_btn:
    double_tap_action:
      action: more-info
    show_label: false
    show_state: true
    state_display: |
      [[[ 
        var bri = Math.round(entity.attributes.brightness / 2.55);
        if (entity.state == "on") return "Lights on at " + bri + "%";
        else return "Lights are off" 
      ]]]
    tap_action:
      action: toggle
  standard_btn_layout:
    aspect_ratio: 1/1
    size: 70%
    styles:
      card: null
      custom_fields:
        s2:
          - justify-self: start
          - margin-left: 10%
          - padding-bottom: 5%
          - font-size: 10pt
      grid:
        - grid-template-areas: '"i l" "n n" "s s" "s2 s2"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr auto auto auto
      icon: null
      label:
        - justify-self: start
      name:
        - justify-self: start
        - margin-left: 10%
        - font-weight: bold
      state:
        - justify-self: start
        - margin-left: 10%
        - font-size: 10pt
  standard_btn_states:
    state:
      - styles:
          card:
            - background-color: red
          custom_fields:
            s2:
              - color: white
          icon:
            - color: white
          label:
            - color: white
          name:
            - color: white
          state:
            - color: white
        value: unavailable
      - styles:
          card: null
          custom_fields:
            s2: null
          icon: null
          label: null
          name: null
          state: null
        value: 'off'
  standard_btn_states_on:
    state:
      - styles:
          card:
            - background-color: '#DFDFDF'
          custom_fields:
            s2:
              - color: Grey
          label:
            - color: Grey
            - font-size: 11pt
          name:
            - color: '#171717'
          state:
            - color: Grey
        value: 'on'
  switch_btn:
    double_tap_action:
      action: more-info
    show_state: true
    tap_action:
      action: toggle
  weather_btn:
    color_type: card
    show_label: true
    show_name: true
    show_state: true
    tap_action:
      action: more-info
  weather_btn_layout:
    aspect_ratio: 1/1
    size: 70%
    styles:
      card:
        - background-color: |
            [[[
              if (states['sun.sun'].state == "below_horizon")
                return "#40445a";
              return "#45aaf2";
            ]]]
      custom_fields:
        s2:
          - justify-self: start
          - margin-left: 10%
          - padding-bottom: 5%
          - font-size: 10pt
          - color: white
      grid:
        - grid-template-areas: '"i l" "s s" "n n" "s2 s2"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr auto auto auto
      icon:
        - color: white
      label:
        - justify-self: start
        - color: white
      name:
        - justify-self: start
        - margin-left: 10%
        - font-size: 10pt
        - color: white
      state:
        - justify-self: start
        - margin-left: 10%
        - font-weight: bold
        - color: white
  overview_alarm_btn_armed:
    aspect_ratio: 4/1
    label: Tap to Disarm
    show_label: true
    show_name: false
    show_state: true
    state:
      - icon: 'mdi:shield-check'
        styles:
          card: null
          icon:
            - color: '#0DD58C'
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: disarmed
      - icon: 'mdi:shield-key'
        styles:
          card: null
          icon:
            - color: var--(primary-text-color)
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: arming
      - icon: 'mdi:shield-home'
        styles:
          card: null
          icon:
            - color: '#45aaf2'
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: armed_home
      - icon: 'mdi:shield-home'
        styles:
          card: null
          icon:
            - color: '#40445a'
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: armed_night
      - icon: 'mdi:shield-lock'
        styles:
          card: null
          icon:
            - color: '#f44336'
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: armed_away
      - icon: 'mdi:shield-alert'
        styles:
          card:
            - background-color: '#d50d0d'
          icon:
            - color: white
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: triggered
    state_display: |
      [[[ 
        if (entity.state == "arming") return "Arming";
        if (entity.state == "pending") return "Pending";
        if (entity.state == "disarmed") return "Alarm Disarmed";
        if (entity.state == "armed_home") return "Armed Day";
        if (entity.state == "armed_away") return "Armed Away";
        if (entity.state == "armed_night") return "Armed Night";
        if (entity.state == "triggered") return "Alarm Triggered";
        else return "Alarm Malfunction" 
      ]]]
    styles:
      grid:
        - grid-template-areas: '"i s" "i l"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr auto
      label:
        - justify-self: start
        - font-size: 0.8em
      state:
        - justify-self: start
  overview_alarm_btn_disarmed:
    aspect_ratio: 2/1
    show_icon: true
    show_name: true
    show_state: false
    styles:
      grid:
        - grid-template-areas: '"n i"'
        - grid-template-columns: 40% 60%
        - grid-template-rows: 1fr
      name:
        - font-size: 0.8em
        - justify-self: end
views:
  - badges: []
    cards:
      - cards:
          - type: conditional
            conditions:
              - entity: alarm_control_panel.ha_alarm
                state: disarmed
            card:
              type: grid
              columns: 6
              cards:
                - aspect_ratio: 1/1
                  custom_fields:
                    s2: '&nbsp'
                  entity: alarm_control_panel.ha_alarm
                  name: Alarm
                  show_name: true
                  show_state: true
                  state:
                    - icon: 'mdi:shield'
                      styles:
                        icon:
                          - filter: grayscale(100%)
                          - filter: opacity(30%)
                      value: disarmed
                    - icon: 'mdi:shield-home'
                      styles:
                        card:
                          - background-color: '#45aaf2'
                        icon:
                          - color: white
                      value: armed_home
                    - icon: 'mdi:shield-home'
                      styles:
                        card:
                          - background-color: '#40445a'
                        icon:
                          - color: white
                      value: armed_night
                    - icon: 'mdi:shield-lock'
                      styles:
                        card:
                          - background-color: '#f44336'
                        icon:
                          - color: white
                      value: armed_away
                    - icon: 'mdi:shield-key-outline'
                      styles:
                        card:
                          - background-color: white
                        icon:
                          - color: black
                          - animation: blink 2s ease infinite
                      value: arming
                    - icon: 'mdi:shield-alert-outline'
                      styles:
                        card:
                          - background-color: '#f44336'
                        icon:
                          - color: white
                          - animation: blink 1s ease infinite
                      value: triggered
                  tap_action:
                    action: call-service
                    service: browser_mod.popup
                    service_data:
                      card:
                        cards:
                          - card:
                              entity: alarm_control_panel.ha_alarm
                              tap_action:
                                action: call-service
                                service: script.alarm_disarm
                              template:
                                - overview_alarm_btn_armed
                              type: 'custom:button-card'
                            conditions:
                              - entity: alarm_control_panel.ha_alarm
                                state_not: disarmed
                            type: conditional
                          - card:
                              color: '#45aaf2'
                              color_type: icon
                              icon: 'mdi:shield-home'
                              name: Home
                              tap_action:
                                action: call-service
                                service: alarm_control_panel.alarm_arm_home
                                service_data:
                                  entity_id: alarm_control_panel.ha_alarm
                              template:
                                - overview_alarm_btn_disarmed
                              type: 'custom:button-card'
                            conditions:
                              - entity: binary_sensor.bedtime
                                state: 'off'
                              - entity: alarm_control_panel.ha_alarm
                                state: disarmed
                            type: conditional
                          - card:
                              color: '#40445a'
                              color_type: icon
                              icon: 'mdi:shield-home'
                              name: Night
                              tap_action:
                                action: call-service
                                service: alarm_control_panel.alarm_arm_night
                                service_data:
                                  entity_id: alarm_control_panel.ha_alarm
                              template:
                                - overview_alarm_btn_disarmed
                              type: 'custom:button-card'
                            conditions:
                              - entity: binary_sensor.bedtime
                                state: 'on'
                              - entity: alarm_control_panel.ha_alarm
                                state: disarmed
                            type: conditional
                          - card:
                              color: '#f44336'
                              color_type: icon
                              icon: 'mdi:shield-lock'
                              name: Away
                              tap_action:
                                action: call-service
                                service: alarm_control_panel.alarm_arm_away
                                service_data:
                                  entity_id: alarm_control_panel.ha_alarm
                              template:
                                - overview_alarm_btn_disarmed
                              type: 'custom:button-card'
                            conditions:
                              - entity: alarm_control_panel.ha_alarm
                                state: disarmed
                            type: conditional
                        type: horizontal-stack
                      deviceID:
                        - this
                      title: Alarm Modes
                      type: horizontal-stack
                  template:
                    - standard_btn_layout
                  type: 'custom:button-card'
                - aspect_ratio: 1/1
                  variables:
                    active_speaker: |
                      [[[ 
                        return (states['input_text.active_speaker'].state) 
                      ]]]
                  custom_fields:
                    media_state: |
                      [[[
                        var active_speaker_state = (states[variables.active_speaker].state);
                        if (active_speaker_state === 'paused') return `<ha-icon icon="mdi:play"></ha-icon>`;   
                        else if (active_speaker_state === 'playing') return  `<ha-icon icon="mdi:pause"></ha-icon>`; 
                        else return;
                      ]]]
                  entity_picture: >-
                    [[[ return
                    (states[variables.active_speaker].attributes.entity_picture);
                    ]]]
                  icon: 'mdi:music'
                  show_entity_picture: true
                  show_name: false
                  show_state: false
                  styles:
                    card:
                      - padding: 0px
                    grid:
                      - grid-template-areas: '"i" "media_state"'
                      - grid-template-rows: 100%
                      - grid-template-columns: 100%
                    entity_picture:
                      - align-items: center
                      - justify-content: center
                      - width: 100%
                      - opacity: 0.9
                      - transform: scale(1.8)
                    custom_fields:
                      media_state:
                        - color: white
                        - opacity: 0.7
                        - margin-top: '-100%'
                        - transform: scale(0.5)
                  tap_action:
                    action: call-service
                    service: media_player.media_play_pause
                    service_data:
                      entity_id: '[[[ return variables.active_speaker ]]]'
                  type: 'custom:button-card'
                  triggers_update: all
                - custom_fields:
                    s2: |
                      [[[
                        var sensor_state = (states['binary_sensor.0x00158d00045ee3ea_contact'].state);
                        if (sensor_state == "on") return "Window is open";
                        else return "Window is closed" 
                      ]]]
                  entity: light.lounge
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/lounge
                  icon: |
                    [[[ 
                      var sensor_state = (states['binary_sensor.0x00158d00045ee3ea_contact'].state);
                      if (sensor_state == "on") 
                        return "mdi:window-open"; 
                      else 
                        return "mdi:sofa" 
                    ]]]
                  name: Lounge
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - light_btn
                  triggers_update:
                    - binary_sensor.0x00158d00045ee3ea_contact
                  type: 'custom:button-card'
                - custom_fields:
                    s2: |
                      [[[
                        var harmonystate = states['sensor.harmony_activity'].state;
                        if (harmonystate == "PowerOff") return "&nbsp";
                        else return harmonystate;
                      ]]]
                  entity: light.wled
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/lounge
                  icon: |
                    [[[
                      if (entity.state == "on") 
                        return "mdi:television-ambient-light"; 
                      else 
                        return "mdi:television" 
                    ]]]
                  name: TV Backlight
                  state_display: |
                    [[[ 
                      var bri = Math.round(entity.attributes.brightness / 2.55);
                      if (entity.state == "on")
                      {
                      if (states["switch.wled_lor"].state == "on") {
                        return "Hyperion active";
                      }
                      else return "Light on at " + bri + "%";
                      }
                      else if (entity.state == "unavailable") return "Unavailable";
                      else return "Light is off";
                    ]]]
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - switch_btn
                  triggers_update:
                    - sensor.harmony_activity
                    - switch.wled_lor
                  type: 'custom:button-card'
                - custom_fields:
                    s2: |
                      [[[
                        var sensor_state = (states['binary_sensor.0x00158d000420b592_contact'].state);
                        if (sensor_state == "on") return "Door is open";
                        else return "Door is closed" 
                      ]]]
                  entity: light.front_door
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/front_door
                  icon: |
                    [[[ 
                      var sensor_state = (states['binary_sensor.0x00158d000420b592_contact'].state);
                      if (sensor_state == "on") 
                        return "mdi:door-open"; 
                      else 
                        return "mdi:door" 
                    ]]]
                  name: Front Door
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - light_btn
                  triggers_update:
                    - binary_sensor.0x00158d000420b592_contact
                  type: 'custom:button-card'
                - custom_fields:
                    s2: |
                      [[[
                        return (states['weather.dark_sky'].attributes.forecast[0].precipitation || 0) + ' mm precip';
                      ]]]
                  entity: weather.dark_sky
                  label: |
                    [[[
                      return states['weather.dark_sky'].attributes.temperature + '°C '
                    ]]]
                  name: |
                    [[[
                      return "Next hour " + states['weather.dark_sky'].attributes.forecast[0].temperature + '°C'
                    ]]]
                  state:
                    - icon: |
                        [[[ 
                          if (states['sun.sun'].state == "below_horizon")
                            return "mdi:weather-night-partly-cloudy";
                            return "mdi:weather-partly-cloudy";
                        ]]]
                      value: partlycloudy
                    - icon: 'mdi:weather-night'
                      value: clear-night
                    - icon: 'mdi:weather-cloudy'
                      value: cloudy
                    - icon: 'mdi:weather-cloudy-arrow-right'
                      value: overcast
                    - icon: 'mdi:weather-fog'
                      value: fog
                    - icon: 'mdi:weather-hail'
                      value: hail
                    - icon: 'mdi:weather-lightning'
                      value: lightning
                    - icon: 'mdi:weather-lightning-rainy'
                      value: lightning-rainy
                    - icon: 'mdi:weather-partlycloudy'
                      value: partlycloudy
                    - icon: 'mdi:weather-pouring'
                      value: pouring
                    - icon: 'mdi:weather-rainy'
                      value: rainy
                    - icon: 'mdi:weather-snowy'
                      value: snowy
                    - icon: 'mdi:weather-snowy-rainy'
                      value: snowy-rainy
                    - icon: 'mdi:weather-sunny'
                      value: sunny
                    - icon: 'mdi:weather-windy'
                      value: windy
                    - icon: 'mdi:weather-windy-variant'
                      value: windy-variant
                  template:
                    - weather_btn_layout
                    - weather_btn
                  triggers_update:
                    - sun.sun
                  type: 'custom:button-card'
                - custom_fields:
                    s2: |
                      [[[
                        var temp = states['sensor.heating_heating_2'].state;
                        return 'Heating at ' + temp + '%';
                      ]]]
                  entity: climate.heating
                  entity_picture: /local/tado_thermostat.svg
                  label: |
                    [[[
                      var temp = states['climate.heating'].attributes.current_temperature;
                      return '' + (temp ? temp : '0.0') + '°C';
                    ]]]
                  name: Heating
                  show_entity_picture: true
                  state_display: |
                    [[[ 
                      var target_temp = states['sensor.heating_target_temp'].state;
                      if (entity.state == "auto") return "Auto target " + target_temp + "°C";
                      if (entity.state == "heat") return "Heating to " + target_temp + "°C";
                      else return "" 
                    ]]]
                  styles:
                    card:
                      - background-color: |
                          [[[
                            var target_temp = states['sensor.heating_target_temp'].state;
                            if (target_temp <= 18.0) return '#32B76F';
                            if (target_temp => 18.1) return '#FFC80F';
                            if (target_temp => 20.0) return '#FF7309';
                          ]]]
                  template:
                    - standard_btn_layout
                    - climate_btn
                    - climate_btn_states
                  triggers_update:
                    - sensor.heating_target_temp
                    - sensor.heating_heating_2
                  type: 'custom:button-card'
                - custom_fields:
                    s2: |
                      [[[
                        var temp = states['sensor.girls_room_heating'].state;
                        return 'Heating at ' + temp + '%';
                      ]]]
                  entity: climate.girls_room
                  entity_picture: /local/tado_radiator_horizontal.svg
                  label: |
                    [[[
                      var temp = states['climate.girls_room'].attributes.current_temperature;
                      return '' + (temp ? temp : '0.0') + '°C';
                    ]]]
                  name: Girls Room
                  show_entity_picture: true
                  state_display: |
                    [[[ 
                      var target_temp = states['sensor.girlsroom_target_temp'].state;
                      if (entity.state == "auto") return "Auto target " + target_temp + "°C";
                      if (entity.state == "heat") return "Heating to " + target_temp + "°C";
                      else return "" 
                    ]]]
                  styles:
                    card:
                      - background-color: |
                          [[[
                            var target_temp = states['sensor.girlsroom_target_temp'].state;
                            if (target_temp <= 18.0) return '#32B76F';
                            if (target_temp => 18.1) return '#FFC80F';
                            if (target_temp => 20.0) return '#FF7309';
                          ]]]
                  template:
                    - standard_btn_layout
                    - climate_btn
                    - climate_btn_states
                  triggers_update:
                    - sensor.girlsroom_target_temp
                    - sensor.girls_room_heating
                  type: 'custom:button-card'
                - custom_fields:
                    s2: |
                      [[[
                        var sensor_state = (states['binary_sensor.xiaomi_windowsensor_dining_room_contact'].state);
                        if (sensor_state == "on") return "Window is open";
                        else return "Window is closed" 
                      ]]]
                  entity: light.dining_room
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/dining-room
                  icon: |
                    [[[ 
                      var sensor_state = (states['binary_sensor.xiaomi_windowsensor_dining_room_contact'].state);
                      if (sensor_state == "on") 
                        return "mdi:window-open"; 
                      else 
                        return "mdi:table-chair" 
                    ]]]
                  label: |
                    [[[
                      var temp = states['sensor.dining_room_temperature'].state;
                      return '' + (temp ? temp : '0.0') + '°C';
                    ]]]
                  name: Dining Room
                  show_label: false
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - light_btn
                  triggers_update:
                    - sensor.dining_room_temperature
                    - binary_sensor.xiaomi_windowsensor_dining_room_contact
                  type: 'custom:button-card'
                - custom_fields:
                    s2: '&nbsp'
                  entity: switch.sonoff2
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/dining-room
                  name: Wall Light
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - switch_btn
                  type: 'custom:button-card'
                - custom_fields:
                    s2: '&nbsp'
                  entity: light.landing
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/landing
                  name: Landing
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - light_btn
                  type: 'custom:button-card'
                - custom_fields:
                    s2: |
                      [[[
                        var sensor_state = (states['binary_sensor.0x00158d00045c1506_contact'].state);
                        if (sensor_state == "on") return "Window is open";
                        else return "Window is closed" 
                      ]]]
                  entity: light.kitchen
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/kitchen
                  icon: |
                    [[[ 
                      var sensor_state_window = (states['binary_sensor.0x00158d00045c1506_contact'].state);
                      var sensor_state_door = (states['binary_sensor.0x00158d00040e7281_contact'].state);
                      if (sensor_state_door == "on") 
                        return "mdi:door-open";
                      if (sensor_state_window == "on") 
                        return "mdi:window-open";
                      else 
                        return "mdi:food-variant" 
                    ]]]
                  name: Kitchen
                  show_label: false
                  show_state: true
                  state_display: |
                    [[[
                      var sensor_state = (states['binary_sensor.0x00158d00040e7281_contact'].state);
                      if (sensor_state == "on") return "Door is open";
                      else return "Door is closed" 
                    ]]]
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - light_btn
                  triggers_update:
                    - binary_sensor.0x00158d00045c1506_contact
                    - binary_sensor.0x00158d00040e7281_contact
                  type: 'custom:button-card'
                - custom_fields:
                    s2: '&nbsp'
                  entity: light.master_bedroom
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/master-bedroom
                  label: |
                    [[[
                      var temp = states['sensor.esp_dev_02_bme280_temperature'].state;
                      return '' + (temp ? temp : '0.0') + '°C';
                    ]]]
                  name: Bedroom
                  show_label: true
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - light_btn
                  triggers_update:
                    - sensor.esp_dev_02_bme280_temperature
                  type: 'custom:button-card'
                - custom_fields:
                    s2: '&nbsp'
                  entity: switch.owl_light
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/girls-room
                  name: Owl Light
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - switch_btn
                  type: 'custom:button-card'
                - custom_fields:
                    s2: '&nbsp'
                  entity: light.spare_bedroom
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/spare-room
                  name: Spare Room
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - light_btn
                  type: 'custom:button-card'
                - custom_fields:
                    s2: '&nbsp'
                  entity: light.office
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/office
                  label: |
                    [[[
                      var temp = states['sensor.esp_dev_01_bme280_temperature'].state;
                      return '' + (temp ? temp : '0.0') + '°C';
                    ]]]
                  name: Office
                  show_label: true
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - light_btn
                  triggers_update:
                    - sensor.esp_dev_01_bme280_temperature
                  type: 'custom:button-card'
                - custom_fields:
                    s2: |
                      [[[
                        var motion_sensor_state = (states['binary_sensor.bathroom_sensor_motion'].state);
                        var window_sensor_state = (states['binary_sensor.xiaomi_windowsensor_bathroom_contact'].state);
                        if (motion_sensor_state == "on") return "Motion detected";
                        if (window_sensor_state == "on") return "Window is open";
                        else return "Window is closed"
                      ]]]
                  entity: light.bathroom
                  hold_action:
                    action: navigate
                    navigation_path: ../lovelace-views/bathroom
                  icon: |
                    [[[ 
                      var motion_sensor_state = (states['binary_sensor.bathroom_sensor_motion'].state);
                      var window_sensor_state = (states['binary_sensor.xiaomi_windowsensor_bathroom_contact'].state);
                      if (motion_sensor_state == "on") return "mdi:motion-sensor";     
                      if (window_sensor_state == "on") return "mdi:window-open"; 
                      else return "mdi:toilet" 
                    ]]]
                  label: |
                    [[[
                      var temp = states['sensor.bathroom_sensor_temperature'].state;
                      return '' + (temp ? temp : '0.0') + '°C';
                    ]]]
                  name: Bathroom
                  show_label: true
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                    - light_btn
                  triggers_update:
                    - sensor.bathroom_sensor_temperature
                    - binary_sensor.bathroom_sensor_motion
                    - binary_sensor.xiaomi_windowsensor_bathroom_contact
                  type: 'custom:button-card'
                - custom_fields:
                    s2: |
                      [[[
                        var bbag_state = (states['sensor.garbage'].state);
                        var bbag_days = (states['sensor.garbage'].attributes.days);
                        var recycle_sensor = (states['sensor.recycling'].state);
                        var recycle_days = (states['sensor.recycling'].attributes.days);
                        if (bbag_days => 7) return "Garbage in " + bbag_days + " Days";
                        else {
                          if (recycle_sensor == "0") return "Recycling Today";
                          else if (recycle_sensor == "1") return "Recycling Tomorrow";
                          else return "Recycling in " + recycle_days + " Days"; 
                        }
                      ]]]
                  name: |
                    [[[
                      var bbag_state = (states['sensor.garbage'].state);
                      var bbag_days = (states['sensor.garbage'].attributes.days);
                      var recycle_sensor = (states['sensor.recycling'].state);
                      var recycle_days = (states['sensor.recycling'].attributes.days);
                      if ((bbag_days <= 7) && (recycle_sensor == "2" || recycle_sensor == "1")) return "Garbage";
                      else return "Recycling" 
                    ]]]
                  hold_action:
                    action: navigate
                    navigation_path: ../calendar
                  icon: |
                    [[[ 
                      var bbag_state = (states['sensor.garbage'].state);
                      var bbag_days = (states['sensor.garbage'].attributes.days);
                      var recycle_sensor = (states['sensor.recycling'].state);
                      var recycle_days = (states['sensor.recycling'].attributes.days);
                      if ((bbag_days <= 7) && (recycle_sensor == "2" || recycle_sensor == "1"))
                        return "mdi:trash-can-outline"; 
                      else 
                        return "mdi:recycle" 
                    ]]]
                  label: |
                    [[[
                      var temp = states['climate.heating'].attributes.current_temperature;
                      return '' + (temp ? temp : '0.0') + '°C';
                    ]]]
                  state_display: |
                    [[[
                      var bbag_state = (states['sensor.garbage'].state);
                      var bbag_days = (states['sensor.garbage'].attributes.days);
                      var recycle_sensor = (states['sensor.recycling'].state);
                      var recycle_days = (states['sensor.recycling'].attributes.days);
                      if ((bbag_state == "0") || (recycle_sensor == "0")) return "Collect Today";
                      if ((bbag_state == "1") || (recycle_sensor == "1")) return "Collect Tomorrow";
                      if ((bbag_state == "2") || (recycle_sensor == "2")) {
                        if (bbag_days <= 7) return "Collect in " + bbag_days + " Days";
                        else if (recycle_days <= 7) return "Collect in " + recycle_days + " Days";
                        else return "Unknown"
                      }
                    ]]]
                  show_state: true
                  show_label: false
                  styles:
                    card:
                      - background-color: |
                          [[[
                            var bbag_days = (states['sensor.garbage'].attributes.days);
                            var recycle_sensor = (states['sensor.recycling'].state);
                            if ((bbag_days <= 7) && (recycle_sensor == "2" || recycle_sensor == "1"))
                              return "#212121";
                            return "#4CAF50";
                          ]]]
                      - color: white
                    icon:
                      - color: white
                  template:
                    - standard_btn_layout
                    - standard_btn_states
                    - standard_btn_states_on
                  triggers_update:
                    - sensor.garden_waste
                    - sensor.recycling
                  type: 'custom:button-card'
          - card:
              entity: alarm_control_panel.ha_alarm
              name: Alarm
              states: []
              type: alarm-panel
            conditions:
              - entity: alarm_control_panel.ha_alarm
                state_not: disarmed
            type: conditional
        type: vertical-stack
    icon: 'mdi:shield'
    panel: true
    path: alarm
    title: Alarm
