button_card_templates:
  animated_btn_states_on:
    state:
      - spin: true
        styles:
          card:
            - background-color: '#DFDFDF'
          custom_fields:
            s2:
              - color: Grey
          label:
            - color: Grey
            - font-size: 11pt
          name:
            - color: '#171717'
          state:
            - color: Grey
        value: 'on'
  climate_btn:
    show_label: true
    show_state: true
    tap_action:
      action: more-info
  climate_btn_states:
    state:
      - styles:
          card:
            - background-color: red
          custom_fields:
            s2:
              - color: white
          icon:
            - color: white
          label:
            - color: white
          name:
            - color: white
          state:
            - color: white
        value: unavailable
      - icon: 'mdi:power'
        styles:
          card:
            - background-color: grey
          custom_fields:
            s2:
              - color: white
          icon:
            - color: white
          label:
            - color: white
          name:
            - color: white
          state:
            - color: white
        value: 'off'
      - icon: 'mdi:fire'
        styles:
          custom_fields:
            s2:
              - color: white
          icon:
            - color: white
          label:
            - color: white
          name:
            - color: white
          state:
            - color: white
        value: heat
      - styles:
          custom_fields:
            s2:
              - color: white
          icon:
            - color: white
          label:
            - color: white
          name:
            - color: white
          state:
            - color: white
        value: auto
  house_mode_button:
    aspect_ratio: 2/1
    show_name: false
    styles:
      name:
        - font-size: 80%
  light_btn:
    double_tap_action:
      action: more-info
    show_label: false
    show_state: true
    state_display: |
      [[[ 
        var bri = Math.round(entity.attributes.brightness / 2.55);
        if (entity.state == "on") return "Lights on at " + bri + "%";
        if (entity.state == "Unavailable") return "Lights are Unavailable";
        else return "Lights are off" 
      ]]]
    tap_action:
      action: toggle


  weather_btn:
    color_type: card
    show_label: true
    show_name: true
    show_state: true
    tap_action:
      action: more-info
  weather_btn_layout:
    aspect_ratio: 1/1
    size: 70%
    styles:
      card:
        - background-color: |
            [[[
              if (states['sun.sun'].state == "below_horizon")
                return "#40445a";
              return "#45aaf2";
            ]]]
      custom_fields:
        s2:
          - justify-self: start
          - margin-left: 10%
          - padding-bottom: 5%
          - font-size: 10pt
          - color: white
      grid:
        - grid-template-areas: '"i l" "s s" "n n" "s2 s2"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr auto auto auto
      icon:
        - color: white
      label:
        - justify-self: start
        - color: white
      name:
        - justify-self: start
        - margin-left: 10%
        - font-size: 10pt
        - color: white
      state:
        - justify-self: start
        - margin-left: 10%
        - font-weight: bold
        - color: white


  half_btn:
    aspect_ratio: 2/1
    show_name: true
    show_state: true
    styles:
      grid:
        - grid-template-areas: '"i n" "i s" '
        - grid-template-rows: 50%
        - grid-template-columns: 50% 50%
      card:
        - border-radius: 0
        - box-shadow: none
      icon:
        - width: 50%
      state:
        - font-size: 10pt
        - justify-self: start
        - margin-left: 10%
        - margin-bottom: 10px
      name:
        - justify-self: start
        - margin-left: 10%
        - font-weight: bold
        - padding: 0
        - margin-top: 10px
    state:
      - value: not_home
        styles:
          icon:
            - filter: grayscale(100%)
            - filter: opacity(30%)
          label:
            - filter: opacity(30%)
          name:
            - filter: opacity(30%)
          state:
            - filter: opacity(30%)
      - value: home
        styles:
          card:
            - background-color: '#4CAF50'
            - color: white
          icon:
            - color: white
          state:
            - color: white

  overview_alarm_btn_armed:
    aspect_ratio: 4/1
    label: Tap to Disarm
    show_label: true
    show_name: false
    show_state: true
    state:
      - icon: 'mdi:shield-check'
        styles:
          card: null
          icon:
            - color: '#0DD58C'
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: disarmed
      - icon: 'mdi:shield-key'
        styles:
          card: null
          icon:
            - color: var--(primary-text-color)
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: arming
      - icon: 'mdi:shield-home'
        styles:
          card: null
          icon:
            - color: '#45aaf2'
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: armed_home
      - icon: 'mdi:shield-home'
        styles:
          card: null
          icon:
            - color: '#40445a'
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: armed_night
      - icon: 'mdi:shield-lock'
        styles:
          card: null
          icon:
            - color: '#f44336'
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: armed_away
      - icon: 'mdi:shield-alert'
        styles:
          card:
            - background-color: '#d50d0d'
          icon:
            - color: white
          label:
            - color: var--(primary-text-color)
          name:
            - color: var--(primary-text-color)
          state:
            - color: var--(primary-text-color)
        value: triggered
    state_display: |
      [[[ 
        if (entity.state == "arming") return "Arming";
        if (entity.state == "pending") return "Pending";
        if (entity.state == "disarmed") return "Alarm Disarmed";
        if (entity.state == "armed_home") return "Armed Day";
        if (entity.state == "armed_away") return "Armed Away";
        if (entity.state == "armed_night") return "Armed Night";
        if (entity.state == "triggered") return "Alarm Triggered";
        else return "Alarm Malfunction" 
      ]]]
    styles:
      grid:
        - grid-template-areas: '"i s" "i l"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr auto
      label:
        - justify-self: start
        - font-size: 0.8em
      state:
        - justify-self: start
  overview_alarm_btn_disarmed:
    aspect_ratio: 2/1
    show_icon: true
    show_name: true
    show_state: false
    styles:
      grid:
        - grid-template-areas: '"n i"'
        - grid-template-columns: 40% 60%
        - grid-template-rows: 1fr
      name:
        - font-size: 0.8em
        - justify-self: end
  quick_toggle_btn:
    aspect_ratio: 1/1
    show_name: false
    state:
      - id: id_off
        styles:
          card: null
          icon: null
          label: null
          name: null
          state: null
        value: 'off'
      - id: id_on
        styles:
          card:
            - background-color: '#0DD58C'
          icon:
            - color: white
          label:
            - color: white
          name:
            - color: white
          state:
            - color: white
        value: 'on'
  small_btn_layout:
    aspect_ratio: 1/1
    show_label: false
    show_name: false
    show_state: false
  standard_btn_layout:
    aspect_ratio: 1/1
    size: 70%
    styles:
      card: null
      custom_fields:
        s2:
          - justify-self: start
          - margin-left: 10%
          - padding-bottom: 5%
          - font-size: 10pt
      grid:
        - grid-template-areas: '"i l" "n n" "s s" "s2 s2"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr auto auto auto
      icon: null
      label:
        - justify-self: start
      name:
        - justify-self: start
        - margin-left: 10%
        - font-weight: bold
      state:
        - justify-self: start
        - margin-left: 10%
        - font-size: 10pt
  standard_btn_states:
    state:
      - styles:
          card:
            - background-color: red
          custom_fields:
            s2:
              - color: white
          icon:
            - color: white
          label:
            - color: white
          name:
            - color: white
          state:
            - color: white
        value: unavailable
      - styles:
          card: null
          custom_fields:
            s2: null
          icon: null
          label: null
          name: null
          state: null
        value: 'off'
  standard_btn_states_on:
    state:
      - styles:
          card:
            - background-color: '#DFDFDF'
          custom_fields:
            s2:
              - color: Grey
          label:
            - color: Grey
            - font-size: 11pt
          name:
            - color: '#171717'
          state:
            - color: Grey
        value: 'on'
  switch_btn:
    double_tap_action:
      action: more-info
    show_state: true
    tap_action:
      action: toggle
custom_header: {}
title: House
views:
  - badges: []
    cards:
      - type:
        cards:
          - type: grid
            cards:
              - type: grid
                columns: 2
                cards:
                  - entity: light.all_lights
                    state:
                      - icon: 'mdi:lightbulb-off'
                        id: id_off
                      - icon: 'mdi:lightbulb-on'
                        id: id_on
                    template: quick_toggle_btn
                    type: 'custom:button-card'
                  # - aspect_ratio: 1/1
                  #   entity: sensor.avg_house_temp
                  #   show_icon: true
                  #   show_name: false
                  #   show_state: true
                  #   styles:
                  #     card:
                  #       - background-color: |
                  #           [[[
                  #             if (entity.state <= 17) return '#32B76F';
                  #             if (entity.state <= 20) return '#FFC80F';
                  #             if (entity.state >= 20) return '#FF7309';
                  #           ]]]
                  #       - color: white
                  #     icon:
                  #       - color: white
                  #     state:
                  #       - margin-top: '-10px'
                  #       - padding-bottom: 10px
                  #   type: 'custom:button-card'
          #         - icon: 'mdi:home'
          #           styles:
          #             card:
          #               - background-color: |
          #                   [[[
          #                     var awaymode_state = (states['input_boolean.away_mode'].state);
          #                     var guestmode_state = (states['input_boolean.guest_mode'].state);
          #                     var homework_state = (states['input_boolean.work_from_home_mode'].state);
          #                     if (awaymode_state == "on") return '#0DD58C';
          #                     if (guestmode_state == "on") return '#0DD58C';
          #                     if (homework_state == "on") return '#0DD58C';
          #                   ]]]
          #             icon:
          #               - color: |
          #                   [[[
          #                     var awaymode_state = (states['input_boolean.away_mode'].state);
          #                     var guestmode_state = (states['input_boolean.guest_mode'].state);
          #                     var homework_state = (states['input_boolean.work_from_home_mode'].state);
          #                     if (awaymode_state == "on") return 'white';
          #                     if (guestmode_state == "on") return 'white';
          #                     if (homework_state == "on") return 'white';
          #                   ]]]
          #           tap_action:
          #             action: call-service
          #             service: browser_mod.popup
          #             service_data:
          #               card:
          #                 cards:
          #                   - custom_fields:
          #                       s2: '&nbsp'
          #                     entity: input_boolean.away_mode
          #                     template:
          #                       - standard_btn_layout
          #                       - standard_btn_states
          #                       - standard_btn_states_on
          #                       - switch_btn
          #                     type: 'custom:button-card'
          #                   - custom_fields:
          #                       s2: '&nbsp'
          #                     entity: input_boolean.guest_mode
          #                     template:
          #                       - standard_btn_layout
          #                       - standard_btn_states
          #                       - standard_btn_states_on
          #                       - switch_btn
          #                     type: 'custom:button-card'
          #                   - custom_fields:
          #                       s2: '&nbsp'
          #                     entity: input_boolean.work_from_home_mode
          #                     template:
          #                       - standard_btn_layout
          #                       - standard_btn_states
          #                       - standard_btn_states_on
          #                       - switch_btn
          #                     type: 'custom:button-card'
          #                 type: horizontal-stack
          #               deviceID:
          #                 - this
          #               title: Home Modes
          #           template: quick_toggle_btn
          #           type: 'custom:button-card'
          #         - color_type: icon
          #           icon: 'mdi:face'
          #           tap_action:
          #             action: call-service
          #             service: browser_mod.popup
          #             service_data:
          #               card:
          #                 cards:
          #                   - cards:
          #                       - aspect_ratio: 2/1
          #                         entity: person.dave
          #                         layout: name_state
          #                         show_name: true
          #                         show_state: true
          #                         styles:
          #                           card: null
          #                           icon:
          #                             - width: 80%
          #                             - height: 80%
          #                           state:
          #                             - font-size: 85%
          #                         tap_action:
          #                           action: more-info
          #                         type: 'custom:button-card'
          #                       - aspect_ratio: 2/1
          #                         entity: person.cat
          #                         layout: name_state
          #                         show_name: true
          #                         show_state: true
          #                         styles:
          #                           card: null
          #                           icon:
          #                             - width: 80%
          #                             - height: 80%
          #                           state:
          #                             - font-size: 85%
          #                         tap_action:
          #                           action: more-info
          #                         type: 'custom:button-card'
          #                     type: horizontal-stack
          #                   - entities:
          #                       - entity: person.dave
          #                       - entity: person.cat
          #                     hours_to_show: 72
          #                     refresh_interval: 0
          #                     type: history-graph
          #                   - dark_mode: true
          #                     entities:
          #                       - entity: person.dave
          #                       - entity: person.cat
          #                     hours_to_show: 72
          #                     type: map
          #                 type: vertical-stack
          #               deviceID:
          #                 - this
          #               style:
          #                 padding: null
          #               title: Person Overview
          #           template: quick_toggle_btn
          #           type: 'custom:button-card'
          #     - aspect_ratio: 1/1
          #       custom_fields:
          #         s2: '&nbsp'
          #       entity: alarm_control_panel.ha_alarm
          #       name: Alarm
          #       show_name: true
          #       show_state: true
          #       state:
          #         - icon: 'mdi:shield'
          #           styles:
          #             icon:
          #               - filter: grayscale(100%)
          #               - filter: opacity(30%)
          #           value: disarmed
          #         - icon: 'mdi:shield-home'
          #           styles:
          #             card:
          #               - background-color: '#45aaf2'
          #             icon:
          #               - color: white
          #           value: armed_home
          #         - icon: 'mdi:shield-home'
          #           styles:
          #             card:
          #               - background-color: '#40445a'
          #             icon:
          #               - color: white
          #           value: armed_night
          #         - icon: 'mdi:shield-lock'
          #           styles:
          #             card:
          #               - background-color: '#f44336'
          #             icon:
          #               - color: white
          #           value: armed_away
          #         - icon: 'mdi:shield-key-outline'
          #           styles:
          #             card:
          #               - background-color: white
          #             icon:
          #               - color: black
          #               - animation: blink 2s ease infinite
          #           value: arming
          #         - icon: 'mdi:shield-alert-outline'
          #           styles:
          #             card:
          #               - background-color: '#f44336'
          #             icon:
          #               - color: white
          #               - animation: blink 1s ease infinite
          #           value: triggered
          #       tap_action:
          #         action: call-service
          #         service: browser_mod.popup
          #         service_data:
          #           card:
          #             cards:
          #               - card:
          #                   entity: alarm_control_panel.ha_alarm
          #                   tap_action:
          #                     action: call-service
          #                     service: script.alarm_disarm
          #                   template:
          #                     - overview_alarm_btn_armed
          #                   type: 'custom:button-card'
          #                 conditions:
          #                   - entity: alarm_control_panel.ha_alarm
          #                     state_not: disarmed
          #                 type: conditional
          #               - card:
          #                   color: '#45aaf2'
          #                   color_type: icon
          #                   icon: 'mdi:shield-home'
          #                   name: Home
          #                   tap_action:
          #                     action: call-service
          #                     service: alarm_control_panel.alarm_arm_home
          #                     service_data:
          #                       entity_id: alarm_control_panel.ha_alarm
          #                   template:
          #                     - overview_alarm_btn_disarmed
          #                   type: 'custom:button-card'
          #                 conditions:
          #                   - entity: binary_sensor.bedtime
          #                     state: 'off'
          #                   - entity: alarm_control_panel.ha_alarm
          #                     state: disarmed
          #                 type: conditional
          #               - card:
          #                   color: '#40445a'
          #                   color_type: icon
          #                   icon: 'mdi:shield-home'
          #                   name: Night
          #                   tap_action:
          #                     action: call-service
          #                     service: alarm_control_panel.alarm_arm_night
          #                     service_data:
          #                       entity_id: alarm_control_panel.ha_alarm
          #                   template:
          #                     - overview_alarm_btn_disarmed
          #                   type: 'custom:button-card'
          #                 conditions:
          #                   - entity: binary_sensor.bedtime
          #                     state: 'on'
          #                   - entity: alarm_control_panel.ha_alarm
          #                     state: disarmed
          #                 type: conditional
          #               - card:
          #                   color: '#f44336'
          #                   color_type: icon
          #                   icon: 'mdi:shield-lock'
          #                   name: Away
          #                   tap_action:
          #                     action: call-service
          #                     service: alarm_control_panel.alarm_arm_away
          #                     service_data:
          #                       entity_id: alarm_control_panel.ha_alarm
          #                   template:
          #                     - overview_alarm_btn_disarmed
          #                   type: 'custom:button-card'
          #                 conditions:
          #                   - entity: alarm_control_panel.ha_alarm
          #                     state: disarmed
          #                 type: conditional
          #             type: horizontal-stack
          #           deviceID:
          #             - this
          #           title: Alarm Modes
          #           type: horizontal-stack
          #       template:
          #         - standard_btn_layout
          #       type: 'custom:button-card'
          #     - type: grid
          #       columns: 2
          #       cards:
          #         - entity: input_boolean.toothbrush_time_input
          #           state:
          #             - icon: 'mdi:tooth'
          #               id: id_off
          #           template: quick_toggle_btn
          #           type: 'custom:button-card'
          #         - entity: input_boolean.bathtime_input
          #           state:
          #             - icon: 'mdi:water-pump-off'
          #               id: id_off
          #           template: quick_toggle_btn
          #           type: 'custom:button-card'
          #         - icon: 'mdi:youtube-tv'
          #           tap_action:
          #             action: navigate
          #             navigation_path: /lovelace/media
          #           template: quick_toggle_btn
          #           type: 'custom:button-card'
          #         - aspect_ratio: 1/1
          #           variables:
          #             active_speaker: |
          #               [[[ 
          #                 return (states['input_text.active_speaker'].state) 
          #               ]]]
          #           custom_fields:
          #             media_state: |
          #               [[[
          #                 var active_speaker_state = (states[variables.active_speaker].state);
          #                 if (active_speaker_state === 'paused') return `<ha-icon icon="mdi:play"></ha-icon>`;   
          #                 else if (active_speaker_state === 'playing') return  `<ha-icon icon="mdi:pause"></ha-icon>`; 
          #                 else return;
          #               ]]]
          #           entity_picture: >-
          #             [[[ return
          #             (states[variables.active_speaker].attributes.entity_picture);
          #             ]]]
          #           icon: 'mdi:music'
          #           show_entity_picture: true
          #           show_name: false
          #           show_state: false
          #           styles:
          #             card:
          #               - padding: 0px
          #             grid:
          #               - grid-template-areas: '"i" "media_state"'
          #               - grid-template-rows: 100%
          #               - grid-template-columns: 100%
          #             entity_picture:
          #               - align-items: center
          #               - justify-content: center
          #               - width: 100%
          #               - opacity: 0.8
          #               - transform: scale(1.8)
          #             custom_fields:
          #               media_state:
          #                 - color: white
          #                 - opacity: 0.7
          #                 - margin-top: '-100%'
          #                 - transform: scale(0.5)
          #           tap_action:
          #             action: navigate
          #             navigation_path: /lovelace/music
          #           type: 'custom:button-card'
          #           triggers_update: all
          # - backdrop:
          #     night: '#40445a'
          #   entity: weather.dark_sky
          #   name: ' '
          #   styles: null
          #   type: 'custom:simple-weather-card'
          
          - type: grid
            cards:
              - aspect_ratio: 1/1
                custom_fields:
                  top_btn:
                    card:
                      type: 'custom:button-card'
                      aspect_ratio: 2/1
                      entity: device_tracker.nicks_iphone
                      name: Nick
                      template:
                        - half_btn
                  bottom_btn:
                    card:
                      type: 'custom:button-card'
                      entity: device_tracker.goobers_phone
                      name: Angelina
                      template:
                        - half_btn
                styles:
                  grid:
                    - grid-template-areas: '"top_btn" "bottom_btn"'
                    - grid-template-rows: 50% 50%
                    - grid-template-columns: 100%
                  card:
                    - padding: 0
                    - margin: 0
                type: 'custom:button-card'
                columns: 3
                square: true

        

              # - custom_fields:
              #     s2: |
              #       [[[
              #         var bbag_state = (states['sensor.garbage'].state);
              #         var bbag_days = (states['sensor.garbage'].attributes.days);
              #         if (bbag_state == "0") return "Garbage Today";
              #         if (bbag_state == "1") return "Garbage Tomorrow";
              #         if (bbag_state == "2") {
              #           if (bbag_days <= 3) return "Garbage in " + bbag_days + " Days";
              #           else return "Unknown"
              #         }
              #       ]]]
              #   name: |
              #     [[[
              #       var bbag_state = (states['sensor.garbage'].state);
              #       var bbag_days = (states['sensor.garbage'].attributes.days);
              #       var recycle_sensor = (states['sensor.recycling'].state);
              #       var recycle_days = (states['sensor.recycling'].attributes.days);
              #       if ((bbag_days <= 3) && (recycle_sensor == "2" || recycle_sensor == "1")) return "Garbage";
              #       else return "Recycling" 
              #     ]]]
              #   hold_action:
              #     action: navigate
              #     navigation_path: ../calendar
              #   icon: |
              #     [[[ 
              #       var bbag_state = (states['sensor.garbage'].state);
              #       var bbag_days = (states['sensor.garbage'].attributes.days);
              #       var recycle_sensor = (states['sensor.recycling'].state);
              #       var recycle_days = (states['sensor.recycling'].attributes.days);
              #       if ((bbag_days <= 3) && (recycle_sensor == "2" || recycle_sensor == "1"))
              #         return "mdi:trash-can-outline"; 
              #       else 
              #         return "mdi:recycle" 
              #     ]]]
              #   state_display: |
              #     [[[
              #       var recycle_sensor = (states['sensor.recycling'].state);
              #       var recycle_days = (states['sensor.recycling'].attributes.days);
              #       if (recycle_sensor == "0") return "Recycling Today";
              #       if (recycle_sensor == "1") return "Recycling Tomorrow";
              #       if (recycle_sensor == "2") {
              #         if (recycle_days <= 3) return "Recycling in " + recycle_days + " Days";
              #         else return "Unknown"
              #       }
              #     ]]]
              #   show_state: true
              #   styles:
              #     card:
              #       - background-color: |
              #           [[[
              #             var bbag_days = (states['sensor.garbage'].attributes.days);
              #             var recycle_sensor = (states['sensor.recycling'].state);
              #             if ((bbag_days <= 3) && (recycle_sensor == "2" || recycle_sensor == "1"))
              #               return "#212121";
              #             return "#4CAF50";
              #           ]]]
              #       - color: white
              #     icon:
              #       - color: white
              #   template:
              #     - standard_btn_layout
              #     - standard_btn_states
              #     - standard_btn_states_on
              #   triggers_update:
              #     - sensor.garbage
              #     - sensor.recycling
                  
              #   type: 'custom:button-card'


              - custom_fields:
                entity: light.living_room_lights
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:sofa" 
                  ]]]
                name: Living Room
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - light_btn
                type: 'custom:button-card'
              - custom_fields:
                entity: light.nick_s_desk
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:desk" 
                  ]]]
                name: Nicks Desk
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - light_btn
                triggers_update:
                  - light.nick_s_desk
                type: 'custom:button-card'
              - custom_fields:
                entity: light.angelina_s_desk
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:desk" 
                  ]]]
                name: Angelinas Desk
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - light_btn
                type: 'custom:button-card'

              - custom_fields:
                entity: switch.fence_lights
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:lightbulb-outline" 
                  ]]]
                name: Fence Lights
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'

              - custom_fields:
                entity: switch.purifier
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:air-purifier" 
                  ]]]
                name: Air Purifier
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'

              - custom_fields:
                entity: switch.rad_charger_1
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:bicycle-electric" 
                  ]]]
                name: Rad Charger 1
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'

              - custom_fields:
                entity: switch.rad_charger_2
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:bicycle-electric" 
                  ]]]
                name: Rad Charger 2
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'

              - custom_fields:
                entity: switch.garage_opener
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:garage" 
                  ]]]
                name: Garage Opener
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'

              - custom_fields:
                entity: switch.plants
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:sprout" 
                  ]]]
                name: Plant Light
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'

              - custom_fields:
                  s2: |
                    [[[
                      if (entity.state == "on") return "Washer is running";
                      else return "Washer is not running";
                    ]]]
                entity: input_boolean.washer_switch
                tap_action:
                  action: null
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:washing-machine" 
                  ]]]
                name: Washing Machine
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                type: 'custom:button-card'

              - custom_fields:
                  s2: |
                    [[[
                      if (entity.state == "on") return "Guest mode is on";
                      else return "Guest mode is off";
                    ]]]
                entity: input_boolean.guest_mode_switch
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:account" 
                  ]]]
                name: Guest Mode
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                type: 'custom:button-card'

              - custom_fields:
                  s2: |
                    [[[
                      if (entity.state == "on") return "TV is on";
                      else return "TV is off";
                    ]]]
                entity: switch.living_room
                hold_action:
                  action: navigate
                  navigation_path: ../lovelace-views/lounge
                icon: |
                  [[[   
                    return "mdi:television" 
                  ]]]
                name: TV
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                type: 'custom:button-card'

              - custom_fields:
                  s2: |
                    [[[
                      var humidity = states['sensor.hallway_humidity'].state;
                      return 'Humidity at ' + humidity + '%';
                    ]]]
                entity: climate.hallway
                label: |
                  [[[
                    var temp = states['climate.hallway'].attributes.current_temperature;
                    return '' + (temp ? temp : '0.0') + '°F';
                  ]]]
                name: Thermostat
                show_entity_picture: true
                state_display: |
                  [[[ 
                    var target_temp = states['climate.hallway'].attributes.temperature;
                    if (entity.state == "off") return "Furnace is off";
                    if (entity.state == "heat") return "Heat set to " + target_temp + "°F";
                    else return "" 
                  ]]]
                styles:
                  card:
                    - background-color: |
                        [[[
                          var target_temp = states['climate.hallway'].attributes.temperature;
                          if (target_temp <= 65) return '#32B76F';
                          if (target_temp => 66) return '#FFC80F';
                          if (target_temp => 70.0) return '#FF7309';
                        ]]]
                template:
                  - standard_btn_layout
                  - climate_btn
                  - climate_btn_states
                triggers_update:
                  - sensor.heating_target_temp
                  - sensor.heating_heating_2
                type: 'custom:button-card'
              # - custom_fields:
              #     s2: |
              #       [[[
              #         var sensor_state = (states['binary_sensor.xiaomi_windowsensor_dining_room_contact'].state);
              #         if (sensor_state == "on") return "Window is open";
              #         else return "Window is closed" 
              #       ]]]
              #   entity: light.dining_room
              #   hold_action:
              #     action: navigate
              #     navigation_path: ../lovelace-views/dining-room
              #   icon: |
              #     [[[ 
              #       var sensor_state = (states['binary_sensor.xiaomi_windowsensor_dining_room_contact'].state);
              #       if (sensor_state == "on") 
              #         return "mdi:window-open"; 
              #       else 
              #         return "mdi:table-chair" 
              #     ]]]
              #   label: |
              #     [[[
              #       var temp = states['sensor.esp_dev_03_am2302_temperature'].state;
              #       return '' + (temp ? temp : '0.0') + '°C';
              #     ]]]
              #   name: Dining Room
              #   show_label: true
              #   template:
              #     - standard_btn_layout
              #     - standard_btn_states
              #     - standard_btn_states_on
              #     - light_btn
              #   triggers_update:
              #     - sensor.dining_room_temperature
              #     - binary_sensor.xiaomi_windowsensor_dining_room_contact
              #     - sensor.esp_dev_03_am2302_temperature
              #   type: 'custom:button-card'
              # - custom_fields:
              #     s2: |
              #       [[[
              #         var harmonystate = states['sensor.harmony_activity'].state;
              #         if (harmonystate == "PowerOff") return "&nbsp";
              #         else return harmonystate;
              #       ]]]
              #   entity: light.wled
              #   hold_action:
              #     action: navigate
              #     navigation_path: ../lovelace-views/lounge
              #   icon: |
              #     [[[
              #       if (entity.state == "on") 
              #         return "mdi:television-ambient-light"; 
              #       else 
              #         return "mdi:television" 
              #     ]]]
              #   name: TV Backlight
              #   state_display: |
              #     [[[ 
              #       var bri = Math.round(entity.attributes.brightness / 2.55);
              #       if (entity.state == "on")
              #       {
              #       if (states["switch.wled_lor"].state == "on") {
              #         return "Hyperion active";
              #       }
              #       else return "Light on at " + bri + "%";
              #       }
              #       else if (entity.state == "unavailable") return "Unavailable";
              #       else return "Light is off";
              #     ]]]
              #   template:
              #     - standard_btn_layout
              #     - standard_btn_states
              #     - standard_btn_states_on
              #     - switch_btn
              #   triggers_update:
              #     - sensor.harmony_activity
              #     - switch.wled_lor
              #   type: 'custom:button-card'
              # - custom_fields:
              #     s2: '&nbsp'
              #   entity: light.master_bedroom
              #   hold_action:
              #     action: navigate
              #     navigation_path: ../lovelace-views/master-bedroom
              #   label: |
              #     [[[
              #       var temp = states['sensor.esp_dev_02_bme280_temperature'].state;
              #       return '' + (temp ? temp : '0.0') + '°C';
              #     ]]]
              #   name: Bedroom
              #   show_label: true
              #   template:
              #     - standard_btn_layout
              #     - standard_btn_states
              #     - standard_btn_states_on
              #     - light_btn
              #   triggers_update:
              #     - sensor.esp_dev_02_bme280_temperature
              #   type: 'custom:button-card'
              
              # - custom_fields:
              #     s2: |
              #       [[[
              #         var temp = states['sensor.girls_room_heating'].state;
              #         return 'Heating at ' + temp + '%';
              #       ]]]
              #   entity: climate.girls_room
              #   entity_picture: /local/tado_radiator_horizontal.svg
              #   label: |
              #     [[[
              #       var temp = states['climate.girls_room'].attributes.current_temperature;
              #       return '' + (temp ? temp : '0.0') + '°C';
              #     ]]]
              #   name: Girls Room
              #   show_entity_picture: true
              #   state_display: |
              #     [[[ 
              #       var target_temp = states['sensor.girlsroom_target_temp'].state;
              #       if (entity.state == "auto") return "Auto target " + target_temp + "°C";
              #       if (entity.state == "heat") return "Heating to " + target_temp + "°C";
              #       else return "" 
              #     ]]]
              #   styles:
              #     card:
              #       - background-color: |
              #           [[[
              #             var target_temp = states['sensor.girlsroom_target_temp'].state;
              #             if (target_temp <= 18.0) return '#32B76F';
              #             if (target_temp => 18.1) return '#FFC80F';
              #             if (target_temp => 20.0) return '#FF7309';
              #           ]]]
              #   template:
              #     - standard_btn_layout
              #     - climate_btn
              #     - climate_btn_states
              #   triggers_update:
              #     - sensor.girlsroom_target_temp
              #     - sensor.girls_room_heating
              #   type: 'custom:button-card'
              # - custom_fields:
              #     s2: |
              #       [[[
              #         var sensor_state = (states['binary_sensor.0x00158d00045c1506_contact'].state);
              #         if (sensor_state == "on") return "Window is open";
              #         else return "Window is closed" 
              #       ]]]
              #   entity: light.kitchen
              #   hold_action:
              #     action: navigate
              #     navigation_path: ../lovelace-views/kitchen
              #   icon: |
              #     [[[ 
              #       var sensor_state_window = (states['binary_sensor.0x00158d00045c1506_contact'].state);
              #       var sensor_state_door = (states['binary_sensor.0x00158d00040e7281_contact'].state);
              #       if (sensor_state_door == "on") 
              #         return "mdi:door-open";
              #       if (sensor_state_window == "on") 
              #         return "mdi:window-open";
              #       else 
              #         return "mdi:food-variant" 
              #     ]]]
              #   name: Kitchen
              #   show_label: false
              #   show_state: true
              #   state_display: |
              #     [[[
              #       var sensor_state = (states['binary_sensor.0x00158d00040e7281_contact'].state);
              #       if (sensor_state == "on") return "Door is open";
              #       else return "Door is closed" 
              #     ]]]
              #   template:
              #     - standard_btn_layout
              #     - standard_btn_states
              #     - standard_btn_states_on
              #     - light_btn
              #   triggers_update:
              #     - binary_sensor.0x00158d00045c1506_contact
              #     - binary_sensor.0x00158d00040e7281_contact
              #   type: 'custom:button-card'
              # - custom_fields:
              #     s2: |
              #       [[[
              #         var sensor_state = (states['binary_sensor.0x00158d000420b592_contact'].state);
              #         if (sensor_state == "on") return "Door is open";
              #         else return "Door is closed" 
              #       ]]]
              #   double_tap_action:
              #     action: more-info
              #   entity: light.front_door
              #   hold_action:
              #     action: navigate
              #     navigation_path: ../lovelace-views/front_door
              #   icon: |
              #     [[[ 
              #       var sensor_state = (states['binary_sensor.0x00158d000420b592_contact'].state);
              #       if (sensor_state == "on") 
              #         return "mdi:door-open"; 
              #       else 
              #         return "mdi:door" 
              #     ]]]
              #   name: Front Door
              #   state_display: |
              #     [[[ 
              #       var bri = Math.round(entity.attributes.brightness / 2.55);
              #       if (entity.state == "on") return "Lights on at " + bri + "%";
              #       else return "Lights are off" 
              #     ]]]
              #   tap_action:
              #     action: toggle
              #   template:
              #     - standard_btn_layout
              #     - standard_btn_states
              #     - standard_btn_states_on
              #     - light_btn
              #   triggers_update:
              #     - binary_sensor.0x00158d000420b592_contact
              #   type: 'custom:button-card'
              # - custom_fields:
              #     s2: |
              #       [[[
              #         var motion_sensor_state = (states['binary_sensor.bathroom_sensor_motion'].state);
              #         var window_sensor_state = (states['binary_sensor.xiaomi_windowsensor_bathroom_contact'].state);
              #         if (motion_sensor_state == "on") return "Motion detected";
              #         if (window_sensor_state == "on") return "Window is open";
              #         else return "Window is closed"
              #       ]]]
              #   entity: light.bathroom
              #   hold_action:
              #     action: navigate
              #     navigation_path: ../lovelace-views/bathroom
              #   icon: |
              #     [[[ 
              #       var motion_sensor_state = (states['binary_sensor.bathroom_sensor_motion'].state);
              #       var window_sensor_state = (states['binary_sensor.xiaomi_windowsensor_bathroom_contact'].state);
              #       if (motion_sensor_state == "on") return "mdi:motion-sensor";     
              #       if (window_sensor_state == "on") return "mdi:window-open"; 
              #       else return "mdi:toilet" 
              #     ]]]
              #   label: |
              #     [[[
              #       var temp = states['sensor.bathroom_sensor_temperature'].state;
              #       return '' + (temp ? temp : '0.0') + '°C';
              #     ]]]
              #   name: Bathroom
              #   show_label: true
              #   template:
              #     - standard_btn_layout
              #     - standard_btn_states
              #     - standard_btn_states_on
              #     - light_btn
              #   triggers_update:
              #     - sensor.bathroom_sensor_temperature
              #     - binary_sensor.bathroom_sensor_motion
              #     - binary_sensor.xiaomi_windowsensor_bathroom_contact
              #   type: 'custom:button-card'
              # - custom_fields:
              #     s2: '&nbsp'
              #   entity: light.landing
              #   hold_action:
              #     action: navigate
              #     navigation_path: ../lovelace-views/landing
              #   name: Landing
              #   template:
              #     - standard_btn_layout
              #     - standard_btn_states
              #     - standard_btn_states_on
              #     - light_btn
              #   type: 'custom:button-card'
              # - custom_fields:
              #     s2: '&nbsp'
              #   entity: light.spare_bedroom
              #   hold_action:
              #     action: navigate
              #     navigation_path: ../lovelace-views/spare-room
              #   name: Spare Room
              #   template:
              #     - standard_btn_layout
              #     - standard_btn_states
              #     - standard_btn_states_on
              #     - light_btn
              #   type: 'custom:button-card'
              # - custom_fields:
              #     s2: '&nbsp'
              #   entity: light.office
              #   hold_action:
              #     action: navigate
              #     navigation_path: ../lovelace-views/office
              #   label: |
              #     [[[
              #       var temp = states['sensor.esp_dev_01_bme280_temperature'].state;
              #       if (temp == "unavailable") { return "0 °C" }
              #       else return '' + (temp ? temp : '0.0') + '°C';
              #     ]]]
              #   name: Office
              #   show_label: true
              #   template:
              #     - standard_btn_layout
              #     - standard_btn_states
              #     - standard_btn_states_on
              #     - light_btn
              #   triggers_update:
              #     - sensor.esp_dev_01_bme280_temperature
              #   type: 'custom:button-card'
              - type: grid
                columns: 1
                cards:
                  - entity: switch.synner_security_status
                    icon: 'mdi:nas'
                    tap_action:
                      action: call-service
                      service: browser_mod.popup
                      service_data:
                        card:
                          cards:
                            - card: null
                              entities:
                                - entities:
                                    - entity: sensor.synner_security_status
                                      name: Free
                                    - entity: sensor.synner_volume_1_used_space
                                      name: Used
                                  entity: sensor.synner_update_available
                                  name: OS
                                  state_header: '% Used'
                                  type: 'custom:multiple-entity-row'
                                - entities:
                                    - entity: >-
                                        sensor.synner_update_available
                                      name: Free
                                    - entity: >-
                                        sensor.synner_update_available
                                      name: Used
                                  entity: >-
                                    sensor.synner_update_available
                                  name: Data
                                  state_header: '% Used'
                                  type: 'custom:multiple-entity-row'
                                - entities:
                                    - entity: >-
                                        sensor.synner_update_available
                                      name: Free
                                    - entity: >-
                                        sensor.synner_update_available
                                      name: Used
                                  entity: >-
                                    sensor.synner_update_available
                                  name: RAID
                                  state_header: '% Used'
                                  type: 'custom:multiple-entity-row'
                              icon: 'mdi:server'
                              title: Synner
                              type: entities
                            - align_header: left
                              align_icon: left
                              card: null
                              entities:
                                - entity: sensor.synner_update_available
                                  name: CPU
                                - entity: sensor.synner_update_available
                                  name: RAM
                              lower_bound: 0
                              name: Performance
                              show:
                                average: true
                                extrema: true
                                fill: false
                                icon: true
                                labels: false
                                name: true
                                state: true
                              type: 'custom:mini-graph-card'
                              upper_bound: 100
                            - align_header: left
                              align_icon: left
                              card: null
                              entities:
                                - entity: sensor.synner_update_available
                                  name: Core Temp
                              show:
                                average: true
                                extrema: true
                                fill: false
                                icon: true
                                labels: true
                                name: true
                                state: true
                              type: 'custom:mini-graph-card'
                          keep:
                            background: true
                            border_radius: false
                            box_shadow: false
                            margin: false
                            outer_padding: false
                          mode: vertical
                          type: 'custom:stack-in-card'
                        deviceID:
                          - this
                        title: Homenas Stats
                    template:
                      - small_btn_layout
                      - standard_btn_states
                      - standard_btn_states_on
                    type: 'custom:button-card'
              
        type: vertical-stack
    icon: 'mdi:home'
    panel: false
    path: main
    popup_cards:
      climate.girls_room:
        card:
          cards:
            - entity: climate.girls_room
              hide:
                state: true
              name: Girls Room Heating
              sensors:
                - entity: sensor.girls_room_heating
                  name: Heating Power
                - entity: sensor.girls_room_humidity
                  name: Humidity
              type: 'custom:simple-thermostat'
            - entities:
                - entity: sensor.girls_room_temperature
                  name: Temperature
                - entity: sensor.girls_room_humidity
                  name: Humidity
                  y_axis: secondary
                - entity: sensor.girls_room_heating
                  name: Power
                  y_axis: secondary
              icon: 'mdi:radiator'
              lower_bound_secondary: 0
              name: Girls Room Heating
              show:
                average: true
                extrema: true
                fill: fade
              type: 'custom:mini-graph-card'
              upper_bound_secondary: 100
          type: vertical-stack
        title: Tado Girls Room
      climate.heating:
        card:
          cards:
            - entity: climate.heating
              hide:
                state: true
              name: Tado Heating
              sensors:
                - entity: sensor.heating_heating_2
                  name: Heating Power
                - entity: sensor.heating_humidity_2
                  name: Humidity
              type: 'custom:simple-thermostat'
            - entities:
                - entity: sensor.heating_temperature_2
                  name: Temperature
                - entity: sensor.heating_humidity_2
                  name: Humidity
                  y_axis: secondary
                - entity: sensor.heating_heating_2
                  name: Power
                  y_axis: secondary
              icon: 'mdi:radiator'
              lower_bound_secondary: 0
              name: Heating
              show:
                average: true
                extrema: true
                fill: fade
              type: 'custom:mini-graph-card'
              upper_bound_secondary: 100
          type: vertical-stack
        title: Heating
    title: Main




  - badges: []
    cards:
      - type: 'custom:stack-in-card'
        mode: vertical
        keep:
          background: true
        cards:
          - aspect_ratio: 1/1
            variables:
              active_speaker: |
                [[[ 
                  return (states['input_text.active_speaker'].state) 
                ]]]
            custom_fields:
              media_state: |
                [[[
                  var active_speaker_state = (states[variables.active_speaker].state);
                  if (active_speaker_state === 'paused') return `<ha-icon icon="mdi:play"></ha-icon>`;   
                  else if (active_speaker_state === 'playing') return  `<ha-icon icon="mdi:pause"></ha-icon>`; 
                  else return;
                ]]]
            entity_picture: >-
              [[[ return
              (states[variables.active_speaker].attributes.entity_picture); ]]]
            icon: 'mdi:music'
            show_entity_picture: true
            show_name: false
            show_state: false
            styles:
              card:
                - padding: 0px
              grid:
                - grid-template-areas: '"i" "media_state"'
                - grid-template-rows: 100%
                - grid-template-columns: 100%
              entity_picture:
                - align-items: center
                - justify-content: center
                - width: 100%
                - opacity: 0.9
                - transform: scale(1.8)
              custom_fields:
                media_state:
                  - color: white
                  - opacity: 0.7
                  - margin-top: '-100%'
                  - transform: scale(0.75)
            tap_action:
              action: call-service
              service: media_player.media_play_pause
              service_data:
                entity_id: '[[[ return variables.active_speaker ]]]'
            type: 'custom:button-card'
            triggers_update: all
          - type: conditional
            conditions:
              - entity: media_player.all_speakers
                state_not: 'off'
              - entity: media_player.downstairs_speakers
                state: 'off'
            card:
              type: vertical-stack
              cards:
                - type: 'custom:mini-media-player'
                  entity: media_player.all_speakers
                  hide:
                    icon: true
                    info: false
                    progress: true
                    volume: false
                  idle_view: when_idle
                  info: scroll
                - type: 'custom:mini-media-player'
                  entity: media_player.dining_room_speaker
                  hide:
                    icon: true
                    controls: true
                    info: true
                    progress: true
                    volume: false
                - type: 'custom:mini-media-player'
                  entity: media_player.lounge_speaker
                  hide:
                    icon: true
                    controls: true
                    info: true
                    progress: true
                    volume: false
                - type: 'custom:mini-media-player'
                  entity: media_player.kitchen_speaker
                  hide:
                    icon: true
                    controls: true
                    info: true
                    progress: true
                    volume: false
                - type: 'custom:mini-media-player'
                  entity: media_player.upstairs_speaker
                  hide:
                    icon: true
                    controls: true
                    info: true
                    progress: true
                    volume: false
          - type: conditional
            conditions:
              - entity: media_player.all_speakers
                state: 'off'
              - entity: media_player.downstairs_speakers
                state_not: 'off'
            card:
              type: vertical-stack
              cards:
                - type: 'custom:mini-media-player'
                  entity: media_player.downstairs_speakers
                  hide:
                    icon: true
                    info: false
                    progress: true
                    volume: false
                  idle_view: when_idle
                  info: scroll
                - type: 'custom:mini-media-player'
                  entity: media_player.dining_room_speaker
                  hide:
                    icon: true
                    controls: true
                    info: true
                    progress: true
                    volume: false
                - type: 'custom:mini-media-player'
                  entity: media_player.lounge_speaker
                  hide:
                    icon: true
                    controls: true
                    info: true
                    progress: true
                    volume: false
                - type: 'custom:mini-media-player'
                  entity: media_player.kitchen_speaker
                  hide:
                    icon: true
                    controls: true
                    info: true
                    progress: true
                    volume: false
          - type: conditional
            conditions:
              - entity: media_player.dining_room_speaker
                state_not: 'off'
              - entity: media_player.all_speakers
                state: 'off'
              - entity: media_player.downstairs_speakers
                state: 'off'
            card:
              type: 'custom:mini-media-player'
              entity: media_player.dining_room_speaker
              hide:
                icon: true
                info: false
                progress: false
                volume: false
              idle_view: when_idle
              info: scroll
          - type: conditional
            conditions:
              - entity: media_player.lounge_speaker
                state_not: 'off'
              - entity: media_player.all_speakers
                state: 'off'
              - entity: media_player.downstairs_speakers
                state: 'off'
            card:
              type: 'custom:mini-media-player'
              entity: media_player.lounge_speaker
              hide:
                icon: true
                info: false
                progress: false
                volume: false
              idle_view: when_idle
              info: scroll
          - type: conditional
            conditions:
              - entity: media_player.kitchen_speaker
                state_not: 'off'
              - entity: media_player.all_speakers
                state: 'off'
              - entity: media_player.downstairs_speakers
                state: 'off'
            card:
              type: 'custom:mini-media-player'
              entity: media_player.kitchen_speaker
              hide:
                icon: true
                info: false
                progress: false
                volume: false
              idle_view: when_idle
              info: scroll
          - type: conditional
            conditions:
              - entity: media_player.upstairs_speaker
                state_not: 'off'
              - entity: media_player.all_speakers
                state: 'off'
              - entity: media_player.downstairs_speakers
                state: 'off'
            card:
              type: 'custom:mini-media-player'
              entity: media_player.upstairs_speaker
              hide:
                icon: true
                info: false
                progress: false
                volume: false
              idle_view: when_idle
              info: scroll




    icon: 'mdi:music'
    path: music
    title: Music
  - badges: []
    cards:
      - cards:
          - type: grid
            cards:
              - custom_fields:
                  s2: '&nbsp'
                entity: switch.harmony_watch_tv
                icon: 'mdi:television'
                name: Watch TV
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'
              - custom_fields:
                  s2: '&nbsp'
                entity: switch.harmony_watch_kodi
                icon: 'mdi:kodi'
                name: Watch Kodi
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'
              - custom_fields:
                  s2: '&nbsp'
                entity: switch.harmony_watch_bluray
                icon: 'mdi:disc'
                name: Watch Bluray
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'
              - custom_fields:
                  s2: '&nbsp'
                entity: switch.harmony_steam_link
                icon: 'mdi:steam'
                name: Steam Link
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'
              - custom_fields:
                  s2: '&nbsp'
                entity: switch.harmony_chromecast_audio
                icon: 'mdi:cast-audio'
                name: Cast Audio
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'
              - custom_fields:
                  s2: '&nbsp'
                entity: switch.harmony_chromecast_video
                icon: 'mdi:cast'
                name: Cast Video
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'
              - custom_fields:
                  s2: '&nbsp'
                entity: switch.harmony_aux
                icon: 'mdi:video-input-component'
                name: Auxillary
                template:
                  - standard_btn_layout
                  - standard_btn_states
                  - standard_btn_states_on
                  - switch_btn
                type: 'custom:button-card'
          - artwork: full-cover-fit
            background: /local/kodi.jpg
            entity: media_player.osmc
            group: false
            hide:
              icon: true
              name: true
              power: true
              progress: true
              runtime: false
              volume: true
            info: scroll
            type: 'custom:mini-media-player'
        type: vertical-stack





    icon: 'mdi:youtube-tv'
    path: media
    title: Media
  - badges: []
    cards:
      - cards:
          - aspect_ratio: 0%
            camera_image: camera.blink_backyard
            camera_view: live
            entities: []
            image: >-
              https://www.home-assistant.io/images/merchandise/shirt-frontpage.png
            title: Backyard Camera
            type: picture-glance
          - aspect_ratio: 0%
            camera_image: camera.blink_blink_driveway
            camera_view: live
            entities: []
            image: >-
              https://www.home-assistant.io/images/merchandise/shirt-frontpage.png
            title: Doorbell Camera
            type: picture-glance
          - aspect_ratio: 0%
            camera_image: camera.front_door
            camera_view: live
            entities: []
            image: >-
              https://www.home-assistant.io/images/merchandise/shirt-frontpage.png
            title: Driveway Camera
            type: picture-glance
          - entities:
              - entity: lock.garage_door
                name: Garage Door
              - entity: binary_sensor.0x00158d00040e7281_contact
                name: Kitchen Door
              - entity: binary_sensor.xiaomi_windowsensor_dining_room_contact
                name: Dining Room Window
              - entity: binary_sensor.0x00158d00045c1506_contact
                name: Kitchen Window
              - entity: binary_sensor.0x00158d00045ee3ea_contact
                name: Lounge Window
              - entity: binary_sensor.xiaomi_windowsensor_bathroom_contact
              - entity: binary_sensor.bathroom_sensor_motion
            title: Sensors
            type: entities
            state_color: false
            show_header_toggle: true
        type: vertical-stack
    icon: 'mdi:security'
    panel: false
    path: security
    title: Security
